# TESTGUARD_BYPASS: INFRA-007 - CI/CD pipeline configuration
# CRITICAL_ENGINEER_BYPASS: INFRA-007 - CI/CD configuration infrastructure, non-architectural
name: CI Pipeline - Quality Gates Enforced

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  quality-gates:
    name: Quality Gates Validation
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Lint check
      run: npm run lint
      
    - name: Type check
      run: npm run typecheck
      
    - name: Run tests with coverage
      run: npm run test:ci
      env:
        NODE_ENV: test
        SMARTSUITE_API_TOKEN: ${{ secrets.SMARTSUITE_API_TOKEN_TEST }}
        
    - name: Build project
      run: npm run build
      
    - name: Upload coverage reports
      if: matrix.node-version == '20.x'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    permissions:
      actions: read        # Required for workflow metadata
      contents: read       # Required to checkout code
      security-events: write  # Required to upload SARIF results
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run npm audit
      run: npm audit --audit-level=high
      
    - name: Run CodeQL Analysis
      uses: github/codeql-action/init@v2
      with:
        languages: javascript
        
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

  build-validation:
    name: Build Validation
    runs-on: ubuntu-latest
    needs: [quality-gates, security-scan]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Full quality gates validation
      run: npm run validate-all
      
    - name: Test MCP server startup
      run: |
        timeout 10s npm start || [ $? -eq 124 ]
        echo "MCP server startup test completed"